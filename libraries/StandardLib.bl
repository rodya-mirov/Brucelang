/*
    Standard library for Brucelang. This should contain all the type
    declarations (native) that _all_ Brucelang projects should include.

    Other libraries can be included in separate files.
 */


// TODO: would love a "String::length: Fn() -> Integer" but circularity is currently forbidden
declare native type String {
}

declare native type Boolean {
    and: Fn(Boolean) -> Boolean;
    or: Fn(Boolean) -> Boolean;
    not: Fn() -> Boolean;

    toString: Fn() -> String;
}

declare native type Integer {
    add: Fn(Integer) -> Integer;
    subtract: Fn(Integer) -> Integer;
    multiply: Fn(Integer) -> Integer;
    divide: Fn(Integer) -> Integer;

    lt: Fn(Integer) -> Boolean;
    lte: Fn(Integer) -> Boolean;
    gt: Fn(Integer) -> Boolean;
    gte: Fn(Integer) -> Boolean;
    eq: Fn(Integer) -> Boolean;
    neq: Fn(Integer) -> Boolean;

    toString: Fn() -> String;
}

declare native type IntList {
    map: Fn(Fn(Integer) -> Integer) -> IntList;             // [1, 2, 3].map(x => x*x) is [1, 4, 9]
    filter: Fn(Fn(Integer) -> Boolean) -> IntList;          // [1, 2, 3].map(x => x>2) is [3]
    reduce: Fn(Integer, Fn(Integer, Integer) -> Integer) -> Integer;    // [1, 2, 3].reduce(0, (acc, elt) => acc+elt*elt) is 14
    size: Fn() -> Integer;                                  // [1, 2, 3].size() is 3
}

// TODO: remove this before deployment! this violates termination guarantees!
declare native rangeGet: Fn(Integer) -> IntList; // rangeGet(10) is [1, 2, 3, 4, 5, 6, 7, 8, 10]

// Just a placeholder print so we can see the loading is working
do "Standard lib is loaded!";
